{"version":3,"sources":["components/weather.js","components/form.js","App.js","index.js"],"names":["Weather","props","iconURL","icon","id","city","src","alt","temp","sunrise","sunset","description","humidity","pressure","error","className","role","Form","onSubmit","loadweather","type","name","placeholder","required","App","getWeather","e","a","preventDefault","target","elements","value","country","fetch","API_call","json","response","console","log","sys","setState","calculateCel","main","weather","calculateTime","alert","state","undefined","Math","round","time","datetime","Date","hour","getHours","min","getMinutes","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb66d085.chunk.js","sourcesContent":["import React from 'react';\r\nimport './weather.css';\r\n\r\nconst Weather = (props) => {\r\n    let iconURL;\r\n    { props.icon ? iconURL = \"https://openweathermap.org/img/wn/\" + props.icon + \"@2x.png\" : iconURL = null}\r\n\r\n    return(\r\n        <div id=\"weatherInfo\">\r\n            <h1 id=\"city\">{props.city}</h1>\r\n\r\n            { props.icon ? <img src={iconURL} alt=\"Weather icon\" id=\"icon\"/> : null}\r\n\r\n            { props.temp ? <h1 id=\"temp\">{props.temp}&deg;</h1> : null }\r\n\r\n            { props.sunrise && props.sunset ? <h5 id=\"sun\"><span>\r\n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/2294/2294976.svg\" alt=\"sunrise\" /> {props.sunrise}</span>\r\n                <span><img src=\"https://www.flaticon.com/svg/static/icons/svg/2294/2294979.svg\" alt=\"sunrise\" /> {props.sunset}</span></h5> \r\n            : null}\r\n\r\n            <h2 id=\"desc\">{props.description}</h2>\r\n\r\n            { props.humidity && props.pressure ? <div id=\"addInfo\"><p>Humadity: {props.humidity}%</p><p>Pressure: {props.pressure} hPa</p></div> : null}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather;\r\n\r\n//ikony sunset i sunrise","import React from 'react';\r\nimport './form.css';\r\n\r\nconst Form = props =>{\r\n    return(\r\n        <div className=\"form\">\r\n            <form onSubmit={props.loadweather}>\r\n                <div>{props.error ? error : null}</div>\r\n                <input type=\"text\" name=\"city\" placeholder=\"Type city\" required></input>\r\n                <input type=\"text\" name=\"country\" placeholder=\"Type country\" required></input>\r\n                <button>Get Weather</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction error(){\r\n    return(\r\n      <div className=\"alert\" role=\"alert\">\r\n        Please enter city and country\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Form;","import React from 'react';\nimport './App.css';\n\nimport Weather from './components/weather';\nimport Form from './components/form';\n\nconst APIKey = \"2471a6c18182a8fd20a37d0455499cb7\";\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      city: undefined,\n      temp: undefined,\n      description: undefined,\n      humidity: undefined,\n      pressure: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      icon: undefined,\n      weather: undefined,\n      error: false\n    };\n  }\n\n  calculateCel(temp){\n    let cel = Math.round(temp - 273.15);\n    return cel;\n  }\n\n  calculateTime(time){\n    const datetime = new Date(time*1000);\n    let hour = datetime.getHours();\n    let min = datetime.getMinutes();\n    if (min <10) return `${hour}:0${min}`;\n    else return `${hour}:${min}`\n  }\n\n  getWeather = async(e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    if (city && country){\n    const API_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${APIKey}`);\n    const response = await API_call.json();\n    console.log(response);\n\n    if (response.name && response.sys.country){\n    this.setState ({\n      city: `${response.name}, ${response.sys.country}`,\n      temp: this.calculateCel(response.main.temp),\n      description: response.weather[0].main,\n      humidity: response.main.humidity,\n      pressure: response.main.pressure,\n      sunrise: this.calculateTime(response.sys.sunrise),\n      sunset: this.calculateTime(response.sys.sunset),\n      icon: response.weather[0].icon,\n      weather: response.weather[0].id\n    })}\n    else{\n      alert(\"Wrong city or country - try again :)\")\n    }\n  } else{\n    this.setState({error: true})\n  }\n  }\n\n  render(){\n    return(\n      <div className={\n        (typeof weather != undefined ?\n        (this.state.weather>=200 && this.state.weather<300 ? 'thunderstorm':\n        (this.state.weather>=300 && this.state.weather<400 ? 'drizzle':\n        (this.state.weather>=500 && this.state.weather<600 ? 'rain' :\n        (this.state.weather>=600 && this.state.weather<700 ? 'snow' :\n        (this.state.weather>=700 && this.state.weather<781 ? 'fog' :\n        (this.state.weather === 781 ? 'tornado' :\n        (this.state.weather === 800 ? 'clear' :\n        (this.state.weather > 800 ? 'clouds' : 'App'\n        )\n        )\n        )\n        )\n        )\n        )\n        )) : 'App')\n      }>\n        <h1 id=\"headH1\">Check weather wherever you want</h1>\n        <Form loadweather={this.getWeather} error={this.state.error}/>\n        <Weather\n          city={this.state.city}\n          temp={this.state.temp}\n          description={this.state.description}\n          humidity={this.state.humidity}\n          pressure={this.state.pressure}\n          sunrise={this.state.sunrise}\n          sunset={this.state.sunset}\n          icon={this.state.icon}\n        />\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}